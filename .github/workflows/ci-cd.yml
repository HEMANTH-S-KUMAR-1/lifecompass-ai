name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install backend dependencies
      working-directory: ./lifecompass-ai-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test backend imports
      working-directory: ./lifecompass-ai-backend
      run: |
        python -c "import fastapi; print('FastAPI OK')"
        python -c "import uvicorn; print('Uvicorn OK')"
        python -c "from ai_providers import AIProviderManager; print('AI Providers OK')"
    
    - name: Test AI provider system
      working-directory: ./lifecompass-ai-backend
      run: |
        python -c "
        from ai_providers import AIProviderManager
        manager = AIProviderManager()
        status = manager.get_status()
        print(f'AI Manager initialized: {len(status[\"available_providers\"])} providers available')
        "
    
    - name: Lint backend code
      working-directory: ./lifecompass-ai-backend
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
    
    - name: Install frontend dependencies
      working-directory: ./lifecompass-ai-frontend
      run: |
        npm ci
    
    - name: Lint frontend code
      working-directory: ./lifecompass-ai-frontend
      run: |
        npm run lint
    
    - name: Build frontend
      working-directory: ./lifecompass-ai-frontend
      run: |
        npm run build
    
    - name: Test frontend build
      working-directory: ./lifecompass-ai-frontend
      run: |
        test -d dist && echo "Build successful: dist/ directory created"
        test -f dist/index.html && echo "Build successful: index.html found"

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security check on backend
      working-directory: ./lifecompass-ai-backend
      run: |
        pip install safety
        safety check --json || true
    
    - name: Run security check on frontend
      working-directory: ./lifecompass-ai-frontend
      run: |
        npm audit --audit-level moderate || true

  integration-test:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
    
    - name: Install backend dependencies
      working-directory: ./lifecompass-ai-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      working-directory: ./lifecompass-ai-frontend
      run: |
        npm ci
    
    - name: Test backend startup
      working-directory: ./lifecompass-ai-backend
      env:
        GOOGLE_API_KEY: "test-key-for-ci"
      run: |
        timeout 10s uvicorn main:app --host 0.0.0.0 --port 8000 || echo "Server startup test completed"
    
    - name: Test frontend build with backend API
      working-directory: ./lifecompass-ai-frontend
      run: |
        npm run build
        echo "Frontend build successful"

  documentation-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check documentation files
      run: |
        test -f README.md && echo "‚úÖ Main README found"
        test -f CONTRIBUTING.md && echo "‚úÖ Contributing guide found"
        test -f LICENSE && echo "‚úÖ License found"
        test -f lifecompass-ai-backend/README.md && echo "‚úÖ Backend README found"
        test -f lifecompass-ai-backend/.env.example && echo "‚úÖ Backend env example found"
        test -f lifecompass-ai-backend/requirements.txt && echo "‚úÖ Backend requirements found"
        test -f lifecompass-ai-frontend/package.json && echo "‚úÖ Frontend package.json found"
    
    - name: Check for sensitive files
      run: |
        if find . -name ".env" -not -path "./.git/*" | grep -q .; then
          echo "‚ùå .env file found in repository"
          exit 1
        else
          echo "‚úÖ No .env files found"
        fi
        
        if find . -name "*.log" -not -path "./.git/*" | grep -q .; then
          echo "‚ö†Ô∏è Log files found in repository"
        else
          echo "‚úÖ No log files found"
        fi

  deploy-ready:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, integration-test, documentation-check]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deployment readiness check
      run: |
        echo "üöÄ All tests passed! Ready for deployment"
        echo "üìã Deployment checklist:"
        echo "  ‚úÖ Backend tests passed"
        echo "  ‚úÖ Frontend tests passed"
        echo "  ‚úÖ Integration tests passed"
        echo "  ‚úÖ Documentation complete"
        echo "  ‚úÖ Security checks completed"
        echo ""
        echo "üåê Deploy to your preferred platform:"
        echo "  - Vercel (Frontend) + Railway (Backend)"
        echo "  - Netlify (Frontend) + Render (Backend)"
        echo "  - AWS, GCP, or Azure"
        echo ""
        echo "üìñ See DEPLOYMENT.md for detailed instructions"
